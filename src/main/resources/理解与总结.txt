xxxContext的类应该尽可能的维护少成员变量，例如 DynamicContext 就维护了 sqlBuilder（编译解析的sql语句） 一个主要的成员变量，其余使用内部类来描述。
    也就是说 xxxContext 应该是某一个动作的上下文对象，从这个角度来说该类的成员变量应该围绕这一动作进行设计，并且尽可能地少。
    并且突出主要的成员变量，次要的改为内部类去描述，这些内部类同样遵循主要的成员变量精简，次要的改为类去描述。

某一件事有多个handler处理时可以将这些个handler定义成提供一个handle方法的接口的实现类，然后维护一个Map将这些handler
    都存进这个Map中，后续需要用到是直接去Map取就可以了。这就是面向接口编程。eg: XMLScriptBuilder#nodeHandlerMap

设计类的时候为了考虑可扩展性，定义一个抽象类或者接口把必要的方法写在里面，后续就可以面向这个抽象类或接口编程，保证了可扩展性，
    对原有的代码也不会产生很强的侵入性

CacheBuilder@setStandardDecorators 中使用装饰器设置模式对cache依次进行包装，使其功能丰富的同时，每一个cache之间又不相耦合
LruCache 使用 LinkedHashMap 实现LRU缓存策略。new LinkedHashMap<Object, Object>(size, .75F, true)（注意 accessOrder 为true）
    并重写 removeEldestEntry 方法，在调用 put 或 putAll 后，如果size() > size则返回true表明应该移除最老的key，这就基本实现了LRU。